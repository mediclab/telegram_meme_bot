FROM rust:latest as builder

RUN apt-get update \
    && apt-get install -y cmake build-essential clang git \
      libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev libclang-dev \
      libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev llvm-dev \
    && cargo install diesel_cli --no-default-features --features "postgres" --target-dir /usr/local/bin \
    && apt-get clean

WORKDIR /opt

RUN git clone --depth 1 --branch '4.x' https://github.com/opencv/opencv.git && \
    cd ./opencv && mkdir build && cd build && \
    cmake \
      -D CMAKE_BUILD_TYPE=RELEASE \
      -D WITH_V4L=ON \
      -D WITH_QT=OFF \
      -D WITH_OPENGL=ON \
      -D WITH_GSTREAMER=OFF \
      -D OPENCV_GENERATE_PKGCONFIG=OFF \
      -D OPENCV_ENABLE_NONFREE=OFF \
      -D INSTALL_PYTHON_EXAMPLES=OFF \
      -D INSTALL_C_EXAMPLES=OFF \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D BUILD_EXAMPLES=OFF \
    .. && \
    make -j"$(nproc)" && \
    make install && \
    rm -rf /opt/opencv

WORKDIR /app

COPY . /app

RUN cargo build --release

FROM debian:bullseye-slim

RUN apt-get update  \
    && apt-get install -y ca-certificates libpq5 libjpeg-dev libpng-dev libopenjp2-7 \
      libtbb2 libtiff5 libwebp6 libopenexr25 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/target/release/tg_meme_bot /usr/local/bin/tg_meme_bot
COPY --from=builder  /usr/local/cargo/bin/diesel /usr/local/bin/diesel
COPY --from=builder  /usr/local/lib/ /usr/local/lib/
COPY --from=builder  /usr/local/bin/ /usr/local/bin/

WORKDIR /app

COPY ./migrations /app/migrations
COPY ./diesel.toml /app/diesel.toml
COPY ./initd.sh /app/initd.sh

ENV LD_LIBRARY_PATH=/usr/local/lib

RUN chmod +x /app/initd.sh

CMD ["/app/initd.sh"]