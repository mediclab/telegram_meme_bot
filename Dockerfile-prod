FROM rust:latest as builder

COPY --from=medic84/opencv:latest /usr/local/lib/libopencv_* /usr/local/lib/
COPY --from=medic84/opencv:latest /usr/local/bin/opencv_* /usr/local/bin/
COPY --from=medic84/opencv:latest /usr/local/include/opencv4 /usr/local/include/opencv4/
COPY --from=medic84/opencv:latest /usr/local/lib/cmake/opencv4 /usr/local/lib/cmake/opencv4/
COPY --from=medic84/opencv:latest /usr/local/share/opencv4 /usr/local/share/opencv4/

RUN apt-get update \
    && apt-get install -y cmake build-essential clang \
    && cargo install diesel_cli --no-default-features --features "postgres" --target-dir /usr/local/bin \
    && apt-get clean

WORKDIR /app

COPY . /app

RUN cargo build --release

FROM debian:bullseye-slim

RUN apt-get update  \
    && apt-get install -y ca-certificates libpq5 libjpeg-dev libpng-dev libopenjp2-7 \
      libtbb2 libtiff5 libwebp6 libopenexr25 libgtk2.0-0 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/target/release/tg_meme_bot /usr/local/bin/tg_meme_bot
COPY --from=builder  /usr/local/cargo/bin/diesel /usr/local/bin/diesel
COPY --from=medic84/opencv:latest /usr/local/lib/libopencv_* /usr/local/lib/
COPY --from=medic84/opencv:latest /usr/local/bin/opencv_* /usr/local/bin/

WORKDIR /app

COPY ./migrations /app/migrations
COPY ./diesel.toml /app/diesel.toml
COPY ./initd.sh /app/initd.sh

ENV LD_LIBRARY_PATH=/usr/local/lib

RUN chmod +x /app/initd.sh

CMD ["/app/initd.sh"]